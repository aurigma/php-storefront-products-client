<?php
/**
 * ProductReferencesApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Aurigma\Storefront\Products
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Storefront API - Products
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: storefront-v1-products
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Aurigma\Storefront\Products\Test\Api;

use \Aurigma\Storefront\Products\Configuration;
use \Aurigma\Storefront\Products\ApiException;
use \Aurigma\Storefront\Products\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProductReferencesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\Storefront\Products
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProductReferencesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for productReferencesGet
     *
     * Returns a storefront product reference..
     *
     */
    public function testProductReferencesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesGetAll
     *
     * Returns all storefront product references relevant to the specified query parameters..
     *
     */
    public function testProductReferencesGetAll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesGetAllProductLinks
     *
     * Returns a list of product links associated with storefront product references relevant to the specified query parameters..
     *
     */
    public function testProductReferencesGetAllProductLinks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesGetProduct
     *
     * Returns a product by storefront product reference..
     *
     */
    public function testProductReferencesGetProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesGetProductCostDetails
     *
     * Returns a product cost details from ecommerce system..
     *
     */
    public function testProductReferencesGetProductCostDetails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesGetProductFilter
     *
     * Returns a product filter by storefront product reference..
     *
     */
    public function testProductReferencesGetProductFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesGetProductLink
     *
     * Returns a product link by storefront product reference..
     *
     */
    public function testProductReferencesGetProductLink()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesGetProductPersonalizationWorkflow
     *
     * Returns a product personalization workflow configuration by storefront product reference..
     *
     */
    public function testProductReferencesGetProductPersonalizationWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesObsoleteGetProduct
     *
     * Returns a product by storefront product reference..
     *
     */
    public function testProductReferencesObsoleteGetProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesObsoleteGetProductFilter
     *
     * Returns a product filter by storefront product reference..
     *
     */
    public function testProductReferencesObsoleteGetProductFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesObsoleteGetProductLink
     *
     * Returns a product link by storefront product reference..
     *
     */
    public function testProductReferencesObsoleteGetProductLink()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productReferencesObsoleteGetProductPersonalizationWorkflow
     *
     * Returns a product personalization workflow configuration by storefront product reference..
     *
     */
    public function testProductReferencesObsoleteGetProductPersonalizationWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
